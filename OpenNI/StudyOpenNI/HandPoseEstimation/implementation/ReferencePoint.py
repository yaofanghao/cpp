import cv2import numpy as np# this file find the reference point in color imageimgPath = './img/'params = cv2.SimpleBlobDetector_Params()# Filter by Area.params.filterByArea = Trueparams.minArea = 10params.filterByColor = Trueparams.blobColor = 0# Filter by Convexityparams.filterByConvexity = Trueparams.minConvexity = 0.6# Filter by Circularityparams.filterByCircularity = Trueparams.minCircularity = 0i=0img = cv2.imread(imgPath+'color_{}.png'.format(i))imgDepth = cv2.imread(imgPath+'depth_{}.png'.format(i), -1)depth = np.asarray(imgDepth[:, :])hsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)lower_blue = np.array([40,60,60])upper_blue = np.array([100,360,360])mask = cv2.inRange(hsv, lower_blue, upper_blue)msk1 = np.bitwise_and(mask == 0, True)img[msk1] = 255img[~msk1] = 0# Create a detector with the parametersdetector = cv2.SimpleBlobDetector(params)keypoints = detector.detect(img)# for keyPoint in keypoints:print keypoints[0].pt[0]print keypoints[0].pt[1]im_with_keypoints = cv2.drawKeypoints(img, keypoints, np.array([]), (0,0,255), cv2.DRAW_MATCHES_FLAGS_DRAW_RICH_KEYPOINTS)# Show blobscv2.imshow("Keypoints", im_with_keypoints)cv2.waitKey(0)